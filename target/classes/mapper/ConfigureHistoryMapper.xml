<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjtu.iqa.mapper.ConfigureHistoryMapper">
  <resultMap id="BaseResultMap" type="com.xjtu.iqa.pojo.ConfigureHistory">
    <id column="CONFIGUREHISTORYID" jdbcType="VARCHAR" property="CONFIGUREHISTORYID" />
    <result column="UPDATETIME" jdbcType="VARCHAR" property="UPDATETIME" />
    <result column="VERSION" jdbcType="VARCHAR" property="VERSION" />
    <result column="CONFIGUREID" jdbcType="VARCHAR" property="CONFIGUREID" />
    <result column="URL" jdbcType="VARCHAR" property="URL" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xjtu.iqa.pojo.ConfigureHistory">
    <result column="REMARKS" jdbcType="LONGVARCHAR" property="REMARKS" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CONFIGUREHISTORYID, UPDATETIME, VERSION, CONFIGUREID, URL
  </sql>
  <sql id="Blob_Column_List">
    REMARKS
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xjtu.iqa.pojo.ConfigureHistoryExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_configurehistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xjtu.iqa.pojo.ConfigureHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tbl_configurehistory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_configurehistory
    where CONFIGUREHISTORYID = #{CONFIGUREHISTORYID,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_configurehistory
    where CONFIGUREHISTORYID = #{CONFIGUREHISTORYID,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xjtu.iqa.pojo.ConfigureHistory">
    insert into tbl_configurehistory (CONFIGUREHISTORYID, UPDATETIME, VERSION, 
      CONFIGUREID, URL, REMARKS
      )
    values (#{CONFIGUREHISTORYID,jdbcType=VARCHAR}, #{UPDATETIME,jdbcType=VARCHAR}, #{VERSION,jdbcType=VARCHAR}, 
      #{CONFIGUREID,jdbcType=VARCHAR}, #{URL,jdbcType=VARCHAR}, #{REMARKS,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xjtu.iqa.pojo.ConfigureHistory">
    insert into tbl_configurehistory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="CONFIGUREHISTORYID != null">
        CONFIGUREHISTORYID,
      </if>
      <if test="UPDATETIME != null">
        UPDATETIME,
      </if>
      <if test="VERSION != null">
        VERSION,
      </if>
      <if test="CONFIGUREID != null">
        CONFIGUREID,
      </if>
      <if test="URL != null">
        URL,
      </if>
      <if test="REMARKS != null">
        REMARKS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="CONFIGUREHISTORYID != null">
        #{CONFIGUREHISTORYID,jdbcType=VARCHAR},
      </if>
      <if test="UPDATETIME != null">
        #{UPDATETIME,jdbcType=VARCHAR},
      </if>
      <if test="VERSION != null">
        #{VERSION,jdbcType=VARCHAR},
      </if>
      <if test="CONFIGUREID != null">
        #{CONFIGUREID,jdbcType=VARCHAR},
      </if>
      <if test="URL != null">
        #{URL,jdbcType=VARCHAR},
      </if>
      <if test="REMARKS != null">
        #{REMARKS,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xjtu.iqa.pojo.ConfigureHistory">
    update tbl_configurehistory
    <set>
      <if test="UPDATETIME != null">
        UPDATETIME = #{UPDATETIME,jdbcType=VARCHAR},
      </if>
      <if test="VERSION != null">
        VERSION = #{VERSION,jdbcType=VARCHAR},
      </if>
      <if test="CONFIGUREID != null">
        CONFIGUREID = #{CONFIGUREID,jdbcType=VARCHAR},
      </if>
      <if test="URL != null">
        URL = #{URL,jdbcType=VARCHAR},
      </if>
      <if test="REMARKS != null">
        REMARKS = #{REMARKS,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where CONFIGUREHISTORYID = #{CONFIGUREHISTORYID,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xjtu.iqa.pojo.ConfigureHistory">
    update tbl_configurehistory
    set UPDATETIME = #{UPDATETIME,jdbcType=VARCHAR},
      VERSION = #{VERSION,jdbcType=VARCHAR},
      CONFIGUREID = #{CONFIGUREID,jdbcType=VARCHAR},
      URL = #{URL,jdbcType=VARCHAR},
      REMARKS = #{REMARKS,jdbcType=LONGVARCHAR}
    where CONFIGUREHISTORYID = #{CONFIGUREHISTORYID,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xjtu.iqa.pojo.ConfigureHistory">
    update tbl_configurehistory
    set UPDATETIME = #{UPDATETIME,jdbcType=VARCHAR},
      VERSION = #{VERSION,jdbcType=VARCHAR},
      CONFIGUREID = #{CONFIGUREID,jdbcType=VARCHAR},
      URL = #{URL,jdbcType=VARCHAR}
    where CONFIGUREHISTORYID = #{CONFIGUREHISTORYID,jdbcType=VARCHAR}
  </update>
</mapper>