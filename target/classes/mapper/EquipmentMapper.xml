<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjtu.iqa.mapper.EquipmentMapper">
  <resultMap id="BaseResultMap" type="com.xjtu.iqa.pojo.Equipment">
    <id column="EQUIPMENTID" jdbcType="VARCHAR" property="EQUIPMENTID" />
    <result column="MACADDRESS" jdbcType="VARCHAR" property="MACADDRESS" />
    <result column="EQUIPMENTMODEL" jdbcType="VARCHAR" property="EQUIPMENTMODEL" />
    <result column="BUYTIME" jdbcType="VARCHAR" property="BUYTIME" />
    <result column="CPU" jdbcType="VARCHAR" property="CPU" />
    <result column="RAM" jdbcType="VARCHAR" property="RAM" />
    <result column="STORAGE" jdbcType="VARCHAR" property="STORAGE" />
    <result column="IP" jdbcType="VARCHAR" property="IP" />
    <result column="STATE" jdbcType="INTEGER" property="STATE" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EQUIPMENTID, MACADDRESS, EQUIPMENTMODEL, BUYTIME, CPU, RAM, STORAGE, IP, STATE
  </sql>
  <select id="selectByExample" parameterType="com.xjtu.iqa.pojo.EquipmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tbl_equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_equipment
    where EQUIPMENTID = #{EQUIPMENTID,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_equipment
    where EQUIPMENTID = #{EQUIPMENTID,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xjtu.iqa.pojo.Equipment">
    insert into tbl_equipment (EQUIPMENTID, MACADDRESS, EQUIPMENTMODEL, 
      BUYTIME, CPU, RAM, 
      STORAGE, IP, STATE)
    values (#{EQUIPMENTID,jdbcType=VARCHAR}, #{MACADDRESS,jdbcType=VARCHAR}, #{EQUIPMENTMODEL,jdbcType=VARCHAR}, 
      #{BUYTIME,jdbcType=VARCHAR}, #{CPU,jdbcType=VARCHAR}, #{RAM,jdbcType=VARCHAR}, 
      #{STORAGE,jdbcType=VARCHAR}, #{IP,jdbcType=VARCHAR}, #{STATE,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xjtu.iqa.pojo.Equipment">
    insert into tbl_equipment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="EQUIPMENTID != null">
        EQUIPMENTID,
      </if>
      <if test="MACADDRESS != null">
        MACADDRESS,
      </if>
      <if test="EQUIPMENTMODEL != null">
        EQUIPMENTMODEL,
      </if>
      <if test="BUYTIME != null">
        BUYTIME,
      </if>
      <if test="CPU != null">
        CPU,
      </if>
      <if test="RAM != null">
        RAM,
      </if>
      <if test="STORAGE != null">
        STORAGE,
      </if>
      <if test="IP != null">
        IP,
      </if>
      <if test="STATE != null">
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="EQUIPMENTID != null">
        #{EQUIPMENTID,jdbcType=VARCHAR},
      </if>
      <if test="MACADDRESS != null">
        #{MACADDRESS,jdbcType=VARCHAR},
      </if>
      <if test="EQUIPMENTMODEL != null">
        #{EQUIPMENTMODEL,jdbcType=VARCHAR},
      </if>
      <if test="BUYTIME != null">
        #{BUYTIME,jdbcType=VARCHAR},
      </if>
      <if test="CPU != null">
        #{CPU,jdbcType=VARCHAR},
      </if>
      <if test="RAM != null">
        #{RAM,jdbcType=VARCHAR},
      </if>
      <if test="STORAGE != null">
        #{STORAGE,jdbcType=VARCHAR},
      </if>
      <if test="IP != null">
        #{IP,jdbcType=VARCHAR},
      </if>
      <if test="STATE != null">
        #{STATE,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xjtu.iqa.pojo.Equipment">
    update tbl_equipment
    <set>
      <if test="MACADDRESS != null">
        MACADDRESS = #{MACADDRESS,jdbcType=VARCHAR},
      </if>
      <if test="EQUIPMENTMODEL != null">
        EQUIPMENTMODEL = #{EQUIPMENTMODEL,jdbcType=VARCHAR},
      </if>
      <if test="BUYTIME != null">
        BUYTIME = #{BUYTIME,jdbcType=VARCHAR},
      </if>
      <if test="CPU != null">
        CPU = #{CPU,jdbcType=VARCHAR},
      </if>
      <if test="RAM != null">
        RAM = #{RAM,jdbcType=VARCHAR},
      </if>
      <if test="STORAGE != null">
        STORAGE = #{STORAGE,jdbcType=VARCHAR},
      </if>
      <if test="IP != null">
        IP = #{IP,jdbcType=VARCHAR},
      </if>
      <if test="STATE != null">
        STATE = #{STATE,jdbcType=INTEGER},
      </if>
    </set>
    where EQUIPMENTID = #{EQUIPMENTID,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xjtu.iqa.pojo.Equipment">
    update tbl_equipment
    set MACADDRESS = #{MACADDRESS,jdbcType=VARCHAR},
      EQUIPMENTMODEL = #{EQUIPMENTMODEL,jdbcType=VARCHAR},
      BUYTIME = #{BUYTIME,jdbcType=VARCHAR},
      CPU = #{CPU,jdbcType=VARCHAR},
      RAM = #{RAM,jdbcType=VARCHAR},
      STORAGE = #{STORAGE,jdbcType=VARCHAR},
      IP = #{IP,jdbcType=VARCHAR},
      STATE = #{STATE,jdbcType=INTEGER}
    where EQUIPMENTID = #{EQUIPMENTID,jdbcType=VARCHAR}
  </update>
</mapper>